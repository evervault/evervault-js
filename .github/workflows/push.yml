# Deploy packages to staging enviroments on push to master
name: Main Push Workflow
on:
  push:
    branches:
      - "master"
      - "main"
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    uses: ./.github/workflows/build-and-test.yml
    with:
      vite-evervault-js-url: "https://js.evervault.io/v2"
      vite-keys-url: "https://api.evervault.io/keys"
      vite-api-url: "https://api.evervault.io"
    secrets:
      tests_team_uuid: ${{ secrets.TESTS_TEAM_UUID }}
      tests_app_uuid: ${{ secrets.TESTS_APP_UUID }}
      tests_decrypt_fn_key: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
  deploy-browser:
    needs: build
    uses: ./.github/workflows/deploy-browser.yml
    with:
      environment: "staging"
      name: "Deploy to Staging"
      version: "v2"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
      aws-s3-bucket: ${{ secrets.BROWSER_SDK_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.BROWSER_SDK_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-inputs:
    needs: build
    uses: ./.github/workflows/deploy-inputs.yml
    with:
      environment: "staging"
      name: "Deploy to Staging"
      version: "v2"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
      aws-s3-bucket: ${{ secrets.INPUTS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.INPUTS_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-ui-components-staging:
    needs: build
    uses: ./.github/workflows/deploy-ui-components.yml
    with:
      environment: "staging"
      name: "Deploy to Staging"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
      aws-s3-bucket: ${{ secrets.UI_COMPONENTS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.UI_COMPONENTS_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-3ds:
    uses: ./.github/workflows/deploy-3ds.yml
    with:
      environment: "staging"
      vite-evervault-js-url: "https://js.evervault.io/v2"
      vite-keys-url: "https://api.evervault.io/keys"
      vite-api-url: "https://api.evervault.io"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
      aws-s3-bucket: ${{ secrets.TDS_AWS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.TDS_AWS_CLOUDFRONT_DISTRIBUTION_ID }}
      tests_team_uuid: ${{ secrets.TESTS_TEAM_UUID }}
      tests_app_uuid: ${{ secrets.TESTS_APP_UUID }}
      tests_decrypt_fn_key: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ssh-key: "${{ secrets.COMMIT_KEY }}"
      - name: Set up Git
        run: |-
          git config user.email "dependencies@evervault.com"
          git config user.name "Evervault Bot"
      - name: Get tags
        run: git fetch --tags origin
      - uses: pnpm/action-setup@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version
          setupGitUser: false
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.SDK_PUBLISH_TOKEN }}
      - name: Create Tags
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: pnpm changeset tag && git push origin --tags
        env:
          HUSKY: 0
