name: Deploy 3DS Package
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: string
      tag_name:
        description: "The tag to be deployed"
        required: false
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    name: "Deploy to ${{ inputs.environment }}"
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ inputs.environment == 'production' &&  secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID || secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ inputs.environment == 'production' &&  secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY || secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: "us-east-1"
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: "${{ inputs.environment }}-3ds-build"
          path: dist
      - name: S3 Deploy
        run: aws s3 cp dist s3://${{ vars.TDS_AWS_S3_BUCKET }}/ --recursive
      - name: Cloudfront Cache Invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.TDS_AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/index.html"
  create_release:
    name: Create Github Release and Changelog
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ inputs.environment == 'production' }}
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get package name
        env:
          TAG: ${{ inputs.tag_name }}
        id: parse
        run: |
          if [[ "$TAG" == *"evervault-react-native"* ]]; then
            echo "name=react-native" >> $GITHUB_OUTPUT
          else
            name_part=${TAG##*/}
            echo "name=${name_part%@*}" >> $GITHUB_OUTPUT
          fi
      - uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/packages/${{ steps.parse.outputs.name }}/CHANGELOG.md
          tag_name: ${{ inputs.tag_name }}