---
name: Publish to npm
on:
  workflow_call:
    inputs:
      package:
        description: "Name of the job"
        required: true
        type: string
      repo_path:
        description: "Where it is in the repo"
        required: true
        type: string
      artifact:
        description: "The artifact containing the built code"
        required: true
        type: string
      tag_name:
        description: "The tag to be deployed"
        required: true
        type: string
    secrets:
      PUBLIC_REPO_NPM_PUBLISH:
        description: "NPM Token"
        required: true

jobs:
  get-artifact-name:
    uses: ./.github/workflows/get-artifact-name.yml
    with:
      package-name: ${{ inputs.package }}
      environment: 'production'

  publish:
    name: Publish to NPM
    needs: [get-artifact-name]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: ${{ needs.get-artifact-name.outputs.artifact-name }}
          path: ${{ inputs.repo_path }}

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"
      - name: PNPM install
        run: pnpm install --frozen-lockfile

      - name: Publish to npm
        run: pnpm --filter ${{ inputs.package }} publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLIC_REPO_NPM_PUBLISH }}
          NPM_CONFIG_PROVENANCE: true
  create_release:
    name: Create Github Release and Changelog
    runs-on: ubuntu-latest
    needs: publish
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get package name
        env:
          TAG: ${{ inputs.tag_name }}
        id: parse
        run: |
          if [[ "$TAG" == *"evervault-react-native"* ]]; then
            echo "name=react-native" >> $GITHUB_OUTPUT
          elif [[ "$TAG" == *"@evervault/react-native"* ]]; then
            echo "name="react-native-v2"" >> $GITHUB_OUTPUT
          else
            name_part=${TAG##*/}
            echo "name=${name_part%@*}" >> $GITHUB_OUTPUT
          fi
      - uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/packages/${{ steps.parse.outputs.name }}/CHANGELOG.md
          tag_name: ${{ inputs.tag_name }}
