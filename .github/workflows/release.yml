# Deploy package to production envrionment on release
# The tag names created by `changeset tag` include the name of the package we want to release
name: Main Release Workflow
on:
  push:
    tags:
      - "@evervault/**"
      - "@evervault/*"
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    uses: ./.github/workflows/build-and-test.yml
    with:
      vite-evervault-js-url: "https://js.evervault.com/v2"
      vite-keys-url: "https://keys.evervault.com"
      vite-api-url: "https://api.evervault.com"
    secrets:
      tests_team_uuid: ${{ secrets.TESTS_TEAM_UUID }}
      tests_app_uuid: ${{ secrets.TESTS_APP_UUID }}
      tests_decrypt_fn_key: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
  deploy-js:
    if: contains(github.ref, 'refs/tags/@evervault/browser')
    needs: build
    uses: ./.github/workflows/deploy-browser.yml
    with:
      environment: "production"
      name: "Deploy to Production"
      version: "v2"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY }}
      aws-s3-bucket: ${{ secrets.BROWSER_SDK_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.BROWSER_SDK_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-inputs:
    if: contains(github.ref, 'refs/tags/@evervault/inputs')
    needs: build
    uses: ./.github/workflows/deploy-inputs.yml
    with:
      environment: "production"
      name: "Deploy to Production"
      version: "v2"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY }}
      aws-s3-bucket: ${{ secrets.INPUTS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.INPUTS_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-ui-components:
    if: contains(github.ref, 'refs/tags/@evervault/ui-components')
    needs: build
    uses: ./.github/workflows/deploy-ui-components.yml
    with:
      environment: "production"
      name: "Deploy to Production"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY }}
      aws-s3-bucket: ${{ secrets.UI_COMPONENTS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.UI_COMPONENTS_CLOUDFRONT_DISTRIBUTION_ID }}
  deploy-3ds:
    if: contains(github.ref, 'refs/tags/@evervault/3ds')
    uses: ./.github/workflows/3ds.workflow.yml
    with:
      environment: "production"
      vite-evervault-js-url: "https://js.evervault.com/v2"
      vite-keys-url: "https://keys.evervault.com"
      vite-api-url: "https://api.evervault.com"
    secrets:
      aws-access-key-id: ${{ secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY }}
      aws-s3-bucket: ${{ secrets.TDS_AWS_S3_BUCKET }}
      aws-cloudfront-distribution-id: ${{ secrets.TDS_AWS_CLOUDFRONT_DISTRIBUTION_ID }}
      tests_team_uuid: ${{ secrets.TESTS_TEAM_UUID }}
      tests_app_uuid: ${{ secrets.TESTS_APP_UUID }}
      tests_decrypt_fn_key: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
  publish-react:
    if: contains(github.ref, 'refs/tags/@evervault/react')
    needs: build
    uses: ./.github/workflows/npm-publish.yml
    with:
      package: "@evervault/react"
      artifact: "react-sdk-build"
      repo_path: "packages/react/dist"
    secrets: inherit
  publish-card-validator:
    if: contains(github.ref, 'refs/tags/@evervault/card-validator')
    needs: build
    uses: ./.github/workflows/npm-publish.yml
    with:
      package: "@evervault/card-validator"
      artifact: "card-validator-build"
      repo_path: "packages/card-validator/dist"
    secrets: inherit
  publish-react-native:
    if: contains(github.ref, 'refs/tags/@evervault/evervault-react-native')
    needs: build
    uses: ./.github/workflows/npm-publish.yml
    with:
      package: "@evervault/evervault-react-native"
      artifact: "react-native-build"
      repo_path: "packages/react-native/lib"
    secrets: inherit
  publish-eql:
    if: contains(github.ref, 'refs/tags/@evervault/eql')
    needs: build
    uses: ./.github/workflows/npm-publish.yml
    with:
      package: "@evervault/eql"
      artifact: "eql-build"
      repo_path: "packages/eql/dist"
    secrets: inherit
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get package name
        env:
          TAG: ${{ github.ref_name }}
        id: parse
        run: |
          if [[ "$TAG" == *"evervault-react-native"* ]]; then
            echo "name=react-native" >> $GITHUB_OUTPUT
          else
            name_part=${TAG##*/}
            echo "name=${name_part%@*}" >> $GITHUB_OUTPUT
          fi
      - uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/packages/${{ steps.parse.outputs.name }}/CHANGELOG.md
