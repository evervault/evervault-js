name: Deploy Browser SDK
on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    name: "Deploy to ${{ inputs.environment }}"
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ inputs.environment == 'production' &&  secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID || secrets.PUBLIC_REPO_AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ inputs.environment == 'production' &&  secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY || secrets.PUBLIC_REPO_AWS_SECRET_ACCESS_KEY_STAGING }}
          aws-region: "us-east-1"
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: browser-sdk-build
          path: dist
      - name: Rename Build Artifacts
        run: cp ./dist/evervault-browser.main.umd.cjs ./dist/index.js && cp ./dist/evervault-browser.main.js ./dist/index.es.js
      - name: S3 Deploy
        run: aws s3 cp ./dist/ s3://${{ vars.BROWSER_SDK_S3_BUCKET }}/v2/preview/ --recursive
      - name: Cloudfront Cache Invalidation
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.BROWSER_SDK_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/v2/preview/index.js"
      - uses: pnpm/action-setup@v4
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Run prefight checks
        id: preflight
        env:
          VITE_EV_TEAM_UUID: ${{ secrets.TESTS_TEAM_UUID }}
          VITE_EV_APP_UUID: ${{ secrets.TESTS_APP_UUID }}
          VITE_API_KEY: ${{ secrets.TESTS_DECRYPT_FN_KEY }}
          VITE_EVERVAULT_JS_URL: https://js.evervault.${{ inputs.environment == 'production' && 'com' || 'io' }}/v2/preview/
        run: pnpm --filter=@repo/browser-pre-release-tests test-prerelease
      - name: Notify slack of failed release gate run
        uses: donaltuohy/deployment-slack-alert@v1
        if: ${{ failure() && steps.preflight.outcome == 'failure' }}
        with:
          webhook: ${{ secrets.PRODUCTION_SLACK_WEBHOOK }}
          service_name: Browser SDK Preflight check failed for ${{ inputs.environment }}
          action: failed
